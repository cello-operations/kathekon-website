{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { motion } from \"framer-motion\";\nimport styled from \"styled-components\";\nimport { PrimaryButton } from '../misc/Buttons.jsx';\nconst CreateButton = styled(PrimaryButton).withConfig({\n  displayName: \"OpenModalButton__CreateButton\",\n  componentId: \"sc-1mbu7ln-0\"\n})([\"\", \"\"], {\n  \"boxShadow\": \"0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)\",\n  \"textTransform\": \"uppercase\",\n  \"fontSize\": \"0.875rem\",\n  \"transitionProperty\": \"background-color, border-color, color, fill, stroke, opacity, box-shadow, transform\",\n  \"transitionDuration\": \"300ms\",\n  \"--transform-translate-x\": \"0\",\n  \"--transform-translate-y\": \"0\",\n  \"--transform-rotate\": \"0\",\n  \"--transform-skew-x\": \"0\",\n  \"--transform-skew-y\": \"0\",\n  \"--transform-scale-x\": \"1\",\n  \"--transform-scale-y\": \"1\",\n  \"transform\": \"translateX(var(--transform-translate-x)) translateY(var(--transform-translate-y)) rotate(var(--transform-rotate)) skewX(var(--transform-skew-x)) skewY(var(--transform-skew-y)) scaleX(var(--transform-scale-x)) scaleY(var(--transform-scale-y))\",\n  \":focus\": {\n    \"outline\": \"2px solid transparent\",\n    \"outlineOffset\": \"2px\",\n    \"boxShadow\": \"0 0 0 3px rgba(66, 153, 225, 0.5)\"\n  },\n  \":hover\": {\n    \"--bg-opacity\": \"1\",\n    \"backgroundColor\": \"rgba(247, 250, 252, var(--bg-opacity))\",\n    \"--text-opacity\": \"1\",\n    \"color\": \"rgba(54, 165, 222, var(--text-opacity))\"\n  },\n  \":hover, :focus\": {\n    \"--transform-translate-y\": \"-1px\",\n    \"boxShadow\": \"0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)\"\n  }\n}); // const OpenModalButton = styled(motion.button)`\n//   font-size: 1.2rem;\n//   padding: 20px;\n//   border-radius: 50px;\n//   border: none;\n//   background-color: #5c3aff;\n//   color: white;\n// `;\n\nconst AnimatedOpenButton = ({\n  children,\n  handleButtonClick\n}) => {\n  return __jsx(CreateButton, {\n    onClick: handleButtonClick,\n    whileHover: {\n      scale: 1.1\n    },\n    whileTap: {\n      scale: 0.9\n    }\n  }, children);\n};\n\nexport default AnimatedOpenButton;","map":null,"metadata":{},"sourceType":"module"}