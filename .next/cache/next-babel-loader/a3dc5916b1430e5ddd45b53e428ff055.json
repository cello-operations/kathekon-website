{"ast":null,"code":"import axios from 'axios';\nimport Cookie from 'universal-cookie';\nconst cookies = new Cookie();\nconst instance = axios.create({\n  baseURL: process.env.NEXT_PUBLIC_API_BASE_URL\n});\n\nconst useConfig = config => {\n  const customConfig = config;\n  const kathekonToken = cookies.get(\"kathekonToken\");\n\n  if (kathekonToken) {\n    customConfig.headers.Authorization = `Bearer ${kathekonToken}`;\n  }\n\n  return customConfig;\n};\n\ninstance.interceptors.request.use(useConfig);\nconst APIHelper = {\n  get(endpoint, config = null) {\n    return config ? instance.get(endpoint, config) : instance.get(endpoint);\n  },\n\n  post(endpoint, data, config = null) {\n    return config ? instance.post(endpoint, data, config) : instance.post(endpoint, data);\n  },\n\n  patch(endpoint, data) {\n    return instance.patch(endpoint, data);\n  },\n\n  delete(endpoint, config = null) {\n    return config ? instance.delete(endpoint, config) : instance.delete(endpoint);\n  },\n\n  put(endpoint, data, config) {\n    return config ? instance.put(endpoint, data, config) : instance.put(endpoint, data);\n  }\n\n};\nexport default APIHelper;","map":{"version":3,"sources":["/Users/Tolulopeodueke/Downloads/kathekon-website/helpers/APIHelpers.js"],"names":["axios","Cookie","cookies","instance","create","baseURL","process","env","NEXT_PUBLIC_API_BASE_URL","useConfig","config","customConfig","kathekonToken","get","headers","Authorization","interceptors","request","use","APIHelper","endpoint","post","data","patch","delete","put"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,MAAMC,OAAO,GAAG,IAAID,MAAJ,EAAhB;AAEA,MAAME,QAAQ,GAAGH,KAAK,CAACI,MAAN,CAAa;AAC5BC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADO,CAAb,CAAjB;;AAIA,MAAMC,SAAS,GAAIC,MAAD,IAAY;AAC5B,QAAMC,YAAY,GAAGD,MAArB;AACA,QAAME,aAAa,GAAGV,OAAO,CAACW,GAAR,CAAY,eAAZ,CAAtB;;AAEA,MAAID,aAAJ,EAAmB;AACjBD,IAAAA,YAAY,CAACG,OAAb,CAAqBC,aAArB,GAAsC,UAASH,aAAc,EAA7D;AACD;;AAED,SAAOD,YAAP;AACD,CATD;;AAWAR,QAAQ,CAACa,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAkCT,SAAlC;AAEA,MAAMU,SAAS,GAAG;AAChBN,EAAAA,GAAG,CAACO,QAAD,EAAWV,MAAM,GAAG,IAApB,EAA0B;AAC7B,WAAOA,MAAM,GAAGP,QAAQ,CAACU,GAAT,CAAaO,QAAb,EAAuBV,MAAvB,CAAH,GAAoCP,QAAQ,CAACU,GAAT,CAAaO,QAAb,CAAjD;AACA,GAHgB;;AAKjBC,EAAAA,IAAI,CAACD,QAAD,EAAWE,IAAX,EAAiBZ,MAAM,GAAG,IAA1B,EAAgC;AACnC,WAAOA,MAAM,GAAGP,QAAQ,CAACkB,IAAT,CAAcD,QAAd,EAAwBE,IAAxB,EAA8BZ,MAA9B,CAAH,GAA2CP,QAAQ,CAACkB,IAAT,CAAcD,QAAd,EAAwBE,IAAxB,CAAxD;AACA,GAPgB;;AASjBC,EAAAA,KAAK,CAACH,QAAD,EAAWE,IAAX,EAAiB;AACrB,WAAOnB,QAAQ,CAACoB,KAAT,CAAeH,QAAf,EAAyBE,IAAzB,CAAP;AACA,GAXgB;;AAajBE,EAAAA,MAAM,CAACJ,QAAD,EAAWV,MAAM,GAAG,IAApB,EAA0B;AAC/B,WAAOA,MAAM,GAAGP,QAAQ,CAACqB,MAAT,CAAgBJ,QAAhB,EAA0BV,MAA1B,CAAH,GAAuCP,QAAQ,CAACqB,MAAT,CAAgBJ,QAAhB,CAApD;AACA,GAfgB;;AAiBjBK,EAAAA,GAAG,CAACL,QAAD,EAAWE,IAAX,EAAiBZ,MAAjB,EAAyB;AAC3B,WAAOA,MAAM,GAAGP,QAAQ,CAACsB,GAAT,CAAaL,QAAb,EAAuBE,IAAvB,EAA6BZ,MAA7B,CAAH,GAA0CP,QAAQ,CAACsB,GAAT,CAAaL,QAAb,EAAuBE,IAAvB,CAAvD;AACA;;AAnBgB,CAAlB;AAsBA,eAAeH,SAAf","sourcesContent":["import axios from 'axios';\nimport Cookie from 'universal-cookie';\n\nconst cookies = new Cookie();\n\nconst instance = axios.create({\n  baseURL: process.env.NEXT_PUBLIC_API_BASE_URL,\n});\n\nconst useConfig = (config) => {\n  const customConfig = config;\n  const kathekonToken = cookies.get(\"kathekonToken\");\n\n  if (kathekonToken) {\n    customConfig.headers.Authorization = `Bearer ${kathekonToken}`\n  }\n\n  return customConfig;\n};\n\ninstance.interceptors.request.use(useConfig);\n\nconst APIHelper = {\n  get(endpoint, config = null) {\n\t\treturn config ? instance.get(endpoint, config) : instance.get(endpoint);\n\t},\n\n\tpost(endpoint, data, config = null) {\n\t\treturn config ? instance.post(endpoint, data, config) : instance.post(endpoint, data);\n\t},\n\n\tpatch(endpoint, data) {\n\t\treturn instance.patch(endpoint, data);\n\t},\n\n\tdelete(endpoint, config = null) {\n\t\treturn config ? instance.delete(endpoint, config) : instance.delete(endpoint);\n\t},\n\n\tput(endpoint, data, config) {\n\t\treturn config ? instance.put(endpoint, data, config) : instance.put(endpoint, data);\n\t},\n}\n\nexport default APIHelper;"]},"metadata":{},"sourceType":"module"}