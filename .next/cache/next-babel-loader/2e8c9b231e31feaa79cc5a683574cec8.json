{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect, useContext } from \"react\";\nimport jwtDecode from \"jwt-decode\";\nimport { generalHelpers } from \"../helpers/generalHelpers\";\nimport Router from \"next/router\";\nimport Cookies from 'universal-cookie';\nimport AuthContext from '../context/AuthContext';\n\nconst useAuth = () => {\n  const currentTime = Date.now() / 1000;\n  const cookie = new Cookies();\n  const userToken = cookie.get('kathekonToken');\n  const {\n    state,\n    dispatch\n  } = useContext(AuthContext);\n  const userDetails = userToken && jwtDecode(userToken);\n  const user = {};\n  useEffect(() => {\n    if (generalHelpers.isEmpty(userDetails)) {\n      dispatch({\n        type: \"logout\"\n      }); // redirect to login\n      // redirect && Router.replace('/login');\n    }\n\n    if (!generalHelpers.isEmpty(userDetails)) {\n      // probably set it in localstorage here\n      dispatch({\n        type: \"authenticate\",\n        payload: _objectSpread({}, userDetails)\n      });\n\n      if (userDetails && userDetails.exp < currentTime || !userDetails) {\n        dispatch({\n          type: \"logout\"\n        }); // redirect to login\n        // redirect && Router.replace('/login');\n      }\n    }\n  }, [user.exp]);\n  const isLoggedOut = userDetails && userDetails.exp < currentTime || !userDetails;\n  user.isAuthenticated = !isLoggedOut;\n  user.user = userDetails;\n  return user;\n};\n\nexport default useAuth;","map":{"version":3,"sources":["/Users/Tolulopeodueke/Downloads/kathekon-website/hooks/useAuth.js"],"names":["useEffect","useContext","jwtDecode","generalHelpers","Router","Cookies","AuthContext","useAuth","currentTime","Date","now","cookie","userToken","get","state","dispatch","userDetails","user","isEmpty","type","payload","exp","isLoggedOut","isAuthenticated"],"mappings":";;;;;;AACA,SAASA,SAAT,EAAoBC,UAApB,QAAsC,OAAtC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAMC,WAAW,GAAGC,IAAI,CAACC,GAAL,KAAa,IAAjC;AACA,QAAMC,MAAM,GAAG,IAAIN,OAAJ,EAAf;AACA,QAAMO,SAAS,GAAGD,MAAM,CAACE,GAAP,CAAW,eAAX,CAAlB;AAEA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBd,UAAU,CAACK,WAAD,CAAtC;AAEA,QAAMU,WAAW,GAAGJ,SAAS,IAAIV,SAAS,CAACU,SAAD,CAA1C;AACA,QAAMK,IAAI,GAAG,EAAb;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIG,cAAc,CAACe,OAAf,CAAuBF,WAAvB,CAAJ,EAAyC;AACvCD,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR,CADuC,CAEvC;AACA;AACD;;AAED,QAAI,CAAChB,cAAc,CAACe,OAAf,CAAuBF,WAAvB,CAAL,EAA0C;AACxC;AACAD,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAE,cAAR;AAAwBC,QAAAA,OAAO,oBAAOJ,WAAP;AAA/B,OAAD,CAAR;;AAEA,UAAIA,WAAW,IAAIA,WAAW,CAACK,GAAZ,GAAkBb,WAAjC,IAAgD,CAACQ,WAArD,EAAkE;AAChED,QAAAA,QAAQ,CAAC;AAAEI,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAR,CADgE,CAEhE;AACA;AACD;AACF;AACF,GAjBQ,EAiBN,CAACF,IAAI,CAACI,GAAN,CAjBM,CAAT;AAmBA,QAAMC,WAAW,GAAGN,WAAW,IAAIA,WAAW,CAACK,GAAZ,GAAkBb,WAAjC,IAAgD,CAACQ,WAArE;AACAC,EAAAA,IAAI,CAACM,eAAL,GAAuB,CAACD,WAAxB;AACAL,EAAAA,IAAI,CAACA,IAAL,GAAYD,WAAZ;AACA,SAAOC,IAAP;AACD,CAjCD;;AAmCA,eAAeV,OAAf","sourcesContent":["  \nimport { useEffect, useContext } from \"react\";\nimport jwtDecode from \"jwt-decode\";\nimport { generalHelpers } from \"../helpers/generalHelpers\";\nimport Router from \"next/router\";\nimport Cookies from 'universal-cookie';\nimport AuthContext from '../context/AuthContext';\n\nconst useAuth = () => {\n  const currentTime = Date.now() / 1000;\n  const cookie = new Cookies();\n  const userToken = cookie.get('kathekonToken');\n\n  const { state, dispatch } = useContext(AuthContext);\n\n  const userDetails = userToken && jwtDecode(userToken);\n  const user = {};\n\n  useEffect(() => {\n    if (generalHelpers.isEmpty(userDetails)) {\n      dispatch({ type: \"logout\" })\n      // redirect to login\n      // redirect && Router.replace('/login');\n    }\n\n    if (!generalHelpers.isEmpty(userDetails)) {\n      // probably set it in localstorage here\n      dispatch({ type: \"authenticate\", payload: { ...userDetails } })\n\n      if (userDetails && userDetails.exp < currentTime || !userDetails) {\n        dispatch({ type: \"logout\" });\n        // redirect to login\n        // redirect && Router.replace('/login');\n      }\n    }\n  }, [user.exp]);\n\n  const isLoggedOut = userDetails && userDetails.exp < currentTime || !userDetails\n  user.isAuthenticated = !isLoggedOut;\n  user.user = userDetails;\n  return user;\n};\n\nexport default useAuth;\n"]},"metadata":{},"sourceType":"module"}