{"ast":null,"code":"import axios from 'axios';\nimport Cookie from 'universal-cookie';\nconst cookies = new Cookie();\nconst instance = axios.create({\n  baseURL: process.env.NEXT_PUBLIC_API_BASE_URL\n});\n\nconst useConfig = config => {\n  const customConfig = config;\n  const kathekonToken = cookies.get(\"kathekonToken\");\n\n  if (kathekonToken) {\n    customConfig.headers.Authorization = `Bearer ${kathekonToken}`;\n  }\n\n  return customConfig;\n};\n\ninstance.interceptors.request.use(useConfig);\nconst APIHelper = {\n  get(endpoint, config = null) {\n    return config ? instance.get(endpoint, config) : instance.get(endpoint);\n  },\n\n  post(endpoint, data, config = null) {\n    return config ? instance.post(endpoint, data, config) : instance.post(endpoint, data);\n  },\n\n  patch(endpoint, data) {\n    return instance.patch(endpoint, data);\n  },\n\n  delete(endpoint, config = null) {\n    return config ? instance.delete(endpoint, config) : instance.delete(endpoint);\n  },\n\n  put(endpoint, data, config) {\n    return config ? instance.put(endpoint, data, config) : instance.put(endpoint, data);\n  }\n\n};\nexport default APIHelper;","map":null,"metadata":{},"sourceType":"module"}