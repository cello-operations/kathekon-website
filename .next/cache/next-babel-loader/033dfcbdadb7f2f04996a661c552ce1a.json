{"ast":null,"code":"var fileToBase64 = function fileToBase64(file) {\n  return new Promise(function (resolve, reject) {\n    var reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = function () {\n      return resolve(reader.result);\n    };\n\n    reader.onerror = function (error) {\n      return reject(error);\n    };\n  });\n};\n\nexport var dataURLToFile = function dataURLToFile(dataURL, fileName) {\n  var array = dataURL.split(',');\n  var mime = array[0].match(/:(.*?);/)[1];\n  var byteString = atob(array[1]);\n  var n = byteString.length;\n  var uint8Array = new Uint8Array(n);\n\n  while (n--) {\n    uint8Array[n] = byteString.charCodeAt(n);\n  }\n\n  return new File([uint8Array], fileName, {\n    type: mime\n  });\n};\nexport default fileToBase64;","map":{"version":3,"sources":["/Users/Tolulopeodueke/Downloads/kathekon-website/utils/fileConverter.js"],"names":["fileToBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","dataURLToFile","dataURL","fileName","array","split","mime","match","byteString","atob","n","length","uint8Array","Uint8Array","charCodeAt","File","type"],"mappings":"AAAA,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD;AAAA,SAAU,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC9D,QAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,IAAAA,MAAM,CAACE,aAAP,CAAqBN,IAArB;;AACAI,IAAAA,MAAM,CAACG,MAAP,GAAgB;AAAA,aAAML,OAAO,CAACE,MAAM,CAACI,MAAR,CAAb;AAAA,KAAhB;;AACAJ,IAAAA,MAAM,CAACK,OAAP,GAAiB,UAACC,KAAD;AAAA,aAAWP,MAAM,CAACO,KAAD,CAAjB;AAAA,KAAjB;AACD,GAL8B,CAAV;AAAA,CAArB;;AAOA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,OAAD,EAAUC,QAAV,EAAuB;AAClD,MAAMC,KAAK,GAAGF,OAAO,CAACG,KAAR,CAAc,GAAd,CAAd;AACA,MAAMC,IAAI,GAAGF,KAAK,CAAC,CAAD,CAAL,CAASG,KAAT,CAAe,SAAf,EAA0B,CAA1B,CAAb;AACA,MAAMC,UAAU,GAAGC,IAAI,CAACL,KAAK,CAAC,CAAD,CAAN,CAAvB;AACA,MAAIM,CAAC,GAAGF,UAAU,CAACG,MAAnB;AACA,MAAMC,UAAU,GAAG,IAAIC,UAAJ,CAAeH,CAAf,CAAnB;;AAEA,SAAOA,CAAC,EAAR,EAAY;AACVE,IAAAA,UAAU,CAACF,CAAD,CAAV,GAAgBF,UAAU,CAACM,UAAX,CAAsBJ,CAAtB,CAAhB;AACD;;AAED,SAAO,IAAIK,IAAJ,CAAS,CAACH,UAAD,CAAT,EAAuBT,QAAvB,EAAiC;AAAEa,IAAAA,IAAI,EAAEV;AAAR,GAAjC,CAAP;AACD,CAZM;AAcP,eAAejB,YAAf","sourcesContent":["const fileToBase64 = (file) => new Promise((resolve, reject) => {\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n  reader.onload = () => resolve(reader.result);\n  reader.onerror = (error) => reject(error);\n});\n\nexport const dataURLToFile = (dataURL, fileName) => {\n  const array = dataURL.split(',');\n  const mime = array[0].match(/:(.*?);/)[1];\n  const byteString = atob(array[1]);\n  let n = byteString.length;\n  const uint8Array = new Uint8Array(n);\n\n  while (n--) {\n    uint8Array[n] = byteString.charCodeAt(n);\n  }\n\n  return new File([uint8Array], fileName, { type: mime });\n};\n\nexport default fileToBase64;"]},"metadata":{},"sourceType":"module"}