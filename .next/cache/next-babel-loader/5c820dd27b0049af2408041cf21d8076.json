{"ast":null,"code":"export var truncateText = function truncateText(str, length, ending) {\n  var stringLength = length;\n  var stringEnding = ending;\n\n  if (stringLength == null) {\n    stringLength = 100;\n  }\n\n  if (ending == null) {\n    stringEnding = '...';\n  }\n\n  if (str.length > stringLength) {\n    return str.substring(0, stringLength - stringEnding.length) + stringEnding;\n  }\n\n  if (str.length < stringLength) {\n    var remaining = stringLength - str.length;\n    return str + new Array(remaining + 1).join(' ');\n  }\n\n  return str;\n};\nexport var isEmpty = function isEmpty(value) {\n  return value === undefined || value === null || typeof value === 'object' && Object.keys(value).length === 0 || typeof value === 'string' && value.trim().length === 0;\n};","map":{"version":3,"sources":["/Users/Tolulopeodueke/Downloads/kathekon-website/helpers/truncateText.js"],"names":["truncateText","str","length","ending","stringLength","stringEnding","substring","remaining","Array","join","isEmpty","value","undefined","Object","keys","trim"],"mappings":"AAAA,OAAO,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAACC,GAAD,EAAMC,MAAN,EAAcC,MAAd,EAAyB;AACnD,MAAIC,YAAY,GAAGF,MAAnB;AACA,MAAIG,YAAY,GAAGF,MAAnB;;AACA,MAAIC,YAAY,IAAI,IAApB,EAA0B;AACxBA,IAAAA,YAAY,GAAG,GAAf;AACD;;AACD,MAAID,MAAM,IAAI,IAAd,EAAoB;AAClBE,IAAAA,YAAY,GAAG,KAAf;AACD;;AACD,MAAIJ,GAAG,CAACC,MAAJ,GAAaE,YAAjB,EAA+B;AAC7B,WAAOH,GAAG,CAACK,SAAJ,CAAc,CAAd,EAAiBF,YAAY,GAAGC,YAAY,CAACH,MAA7C,IAAuDG,YAA9D;AACD;;AAED,MAAIJ,GAAG,CAACC,MAAJ,GAAaE,YAAjB,EAA+B;AAC7B,QAAMG,SAAS,GAAGH,YAAY,GAAGH,GAAG,CAACC,MAArC;AACA,WAAOD,GAAG,GAAG,IAAIO,KAAJ,CAAUD,SAAS,GAAG,CAAtB,EAAyBE,IAAzB,CAA8B,GAA9B,CAAb;AACD;;AACD,SAAOR,GAAP;AACD,CAlBM;AAoBP,OAAO,IAAMS,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD;AAAA,SACrBA,KAAK,KAAKC,SAAV,IACGD,KAAK,KAAK,IADb,IAEI,OAAOA,KAAP,KAAiB,QAAjB,IAA6BE,MAAM,CAACC,IAAP,CAAYH,KAAZ,EAAmBT,MAAnB,KAA8B,CAF/D,IAGI,OAAOS,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACI,IAAN,GAAab,MAAb,KAAwB,CAJpC;AAAA,CAAhB","sourcesContent":["export const truncateText = (str, length, ending) => {\n  let stringLength = length;\n  let stringEnding = ending;\n  if (stringLength == null) {\n    stringLength = 100;\n  }\n  if (ending == null) {\n    stringEnding = '...';\n  }\n  if (str.length > stringLength) {\n    return str.substring(0, stringLength - stringEnding.length) + stringEnding;\n  }\n\n  if (str.length < stringLength) {\n    const remaining = stringLength - str.length;\n    return str + new Array(remaining + 1).join(' ');\n  }\n  return str;\n};\n\nexport const isEmpty = (value) => (\n  value === undefined\n  || value === null\n  || (typeof value === 'object' && Object.keys(value).length === 0)\n  || (typeof value === 'string' && value.trim().length === 0)\n)\n"]},"metadata":{},"sourceType":"module"}