{"ast":null,"code":"import axios from 'axios';\nimport Cookie from 'universal-cookie';\nvar cookies = new Cookie();\nvar instance = axios.create({\n  baseURL: process.env.NEXT_PUBLIC_API_BASE_URL\n});\n\nvar useConfig = function useConfig(config) {\n  var customConfig = config;\n  var kathekonToken = cookies.get(\"kathekonToken\");\n\n  if (kathekonToken) {\n    customConfig.headers.Authorization = \"Bearer \".concat(kathekonToken);\n  }\n\n  return customConfig;\n};\n\ninstance.interceptors.request.use(useConfig);\nvar APIHelper = {\n  get: function get(endpoint) {\n    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return config ? instance.get(endpoint, config) : instance.get(endpoint);\n  },\n  post: function post(endpoint, data) {\n    var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    return config ? instance.post(endpoint, data, config) : instance.post(endpoint, data);\n  },\n  patch: function patch(endpoint, data) {\n    return instance.patch(endpoint, data);\n  },\n  \"delete\": function _delete(endpoint) {\n    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return config ? instance[\"delete\"](endpoint, config) : instance[\"delete\"](endpoint);\n  },\n  put: function put(endpoint, data, config) {\n    return config ? instance.put(endpoint, data, config) : instance.put(endpoint, data);\n  }\n};\nexport default APIHelper;","map":null,"metadata":{},"sourceType":"module"}