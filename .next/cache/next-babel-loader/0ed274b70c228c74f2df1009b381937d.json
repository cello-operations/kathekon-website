{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nvar intialState = {\n  isAuthenticated: false,\n  user: {}\n};\nvar AuthContext = /*#__PURE__*/React.createContext(intialState);\nvar Provider = AuthContext.Provider;\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case \"authenticate\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isAuthenticated: true,\n        user: action.payload\n      });\n\n    case \"logout\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isAuthenticated: false,\n        user: {}\n      });\n\n    default:\n      return intialState;\n  }\n};\n\nvar AuthStateProvider = function AuthStateProvider(_ref) {\n  var children = _ref.children;\n\n  var _React$useReducer = React.useReducer(reducer, intialState),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      state = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  return __jsx(Provider, {\n    value: {\n      state: state,\n      dispatch: dispatch\n    }\n  }, children);\n};\n\nexport { AuthStateProvider };\nexport default AuthContext;","map":null,"metadata":{},"sourceType":"module"}