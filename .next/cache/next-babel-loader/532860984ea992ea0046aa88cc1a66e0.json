{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/Tolulopeodueke/Downloads/kathekon-website/helpers/AnimationRevealPage.jsx\",\n    _s = $RefreshSig$(),\n    _this2 = this;\n\nvar __jsx = React.createElement;\nimport _styled from \"styled-components\";\nimport React from \"react\";\n\n/* framer-motion and useInView here are used to animate the sections in when we reach them in the viewport\n */\nimport { motion } from \"framer-motion\";\nimport useInView from '../hooks/useInView';\n\nvar StyledDiv = _styled.div.withConfig({\n  displayName: \"AnimationRevealPage__StyledDiv\",\n  componentId: \"sc-14v83ae-0\"\n})({\n  \"minHeight\": \"100vh\",\n  \"--text-opacity\": \"1\",\n  \"color\": \"rgba(36, 62, 99, var(--text-opacity))\",\n  \"padding\": \"2rem\",\n  \"overflow\": \"hidden\"\n});\n\n_c = StyledDiv;\n\nfunction AnimationReveal(_ref) {\n  var _this = this;\n\n  var disabled = _ref.disabled,\n      children = _ref.children;\n\n  if (disabled) {\n    return __jsx(React.Fragment, null, children);\n  }\n\n  if (!Array.isArray(children)) children = [children];\n  var directions = [\"left\", \"right\"];\n  var childrenWithAnimation = children.map(function (child, i) {\n    return __jsx(AnimatedSlideInComponent, {\n      key: i,\n      direction: directions[i % directions.length],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, child);\n  });\n  return __jsx(React.Fragment, null, childrenWithAnimation);\n}\n\n_c2 = AnimationReveal;\n\nfunction AnimatedSlideInComponent(_ref2) {\n  _s();\n\n  var _ref2$direction = _ref2.direction,\n      direction = _ref2$direction === void 0 ? \"left\" : _ref2$direction,\n      _ref2$offset = _ref2.offset,\n      offset = _ref2$offset === void 0 ? 30 : _ref2$offset,\n      children = _ref2.children;\n\n  var _useInView = useInView(30),\n      _useInView2 = _slicedToArray(_useInView, 2),\n      ref = _useInView2[0],\n      inView = _useInView2[1];\n\n  var x = {\n    target: \"0%\"\n  };\n  if (direction === \"left\") x.initial = \"-150%\";else x.initial = \"150%\";\n  return __jsx(motion.section, {\n    initial: {\n      x: x.initial\n    },\n    animate: {\n      x: inView && x.target,\n      transitionEnd: {\n        x: inView && 0\n      }\n    },\n    transition: {\n      type: \"spring\",\n      damping: 100,\n      duration: 1\n    },\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, children);\n}\n\n_s(AnimatedSlideInComponent, \"GpcLnEGLCRT/LcXgsVwPMCbjDPg=\", false, function () {\n  return [useInView];\n});\n\n_c3 = AnimatedSlideInComponent;\n\nvar AnimationRevealPage = function AnimationRevealPage(props) {\n  return __jsx(StyledDiv, {\n    className: \"App\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 3\n    }\n  }, __jsx(AnimationReveal, _extends({}, props, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  })));\n};\n\n_c4 = AnimationRevealPage;\nexport default AnimationRevealPage;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"StyledDiv\");\n$RefreshReg$(_c2, \"AnimationReveal\");\n$RefreshReg$(_c3, \"AnimatedSlideInComponent\");\n$RefreshReg$(_c4, \"AnimationRevealPage\");","map":{"version":3,"sources":["/Users/Tolulopeodueke/Downloads/kathekon-website/helpers/AnimationRevealPage.jsx"],"names":["React","motion","useInView","StyledDiv","div","AnimationReveal","disabled","children","Array","isArray","directions","childrenWithAnimation","map","child","i","length","AnimatedSlideInComponent","direction","offset","ref","inView","x","target","initial","transitionEnd","type","damping","duration","AnimationRevealPage","props"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA;AACA;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;;AAEA,IAAMC,SAAS,GAAG,QAAGC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAf;;KAAMD,S;;AACN,SAASE,eAAT,OAAiD;AAAA;;AAAA,MAAtBC,QAAsB,QAAtBA,QAAsB;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAC/C,MAAID,QAAJ,EAAc;AACZ,WAAO,4BAAGC,QAAH,CAAP;AACD;;AAED,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,QAAd,CAAL,EAA8BA,QAAQ,GAAG,CAACA,QAAD,CAAX;AAE9B,MAAMG,UAAU,GAAG,CAAC,MAAD,EAAS,OAAT,CAAnB;AACA,MAAMC,qBAAqB,GAAGJ,QAAQ,CAACK,GAAT,CAAa,UAACC,KAAD,EAAQC,CAAR,EAAc;AACvD,WACE,MAAC,wBAAD;AAA0B,MAAA,GAAG,EAAEA,CAA/B;AAAkC,MAAA,SAAS,EAAEJ,UAAU,CAACI,CAAC,GAAGJ,UAAU,CAACK,MAAhB,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,KADH,CADF;AAKD,GAN6B,CAA9B;AAOA,SAAO,4BAAGF,qBAAH,CAAP;AACD;;MAhBQN,e;;AAkBT,SAASW,wBAAT,QAAiF;AAAA;;AAAA,8BAA7CC,SAA6C;AAAA,MAA7CA,SAA6C,gCAAjC,MAAiC;AAAA,2BAAzBC,MAAyB;AAAA,MAAzBA,MAAyB,6BAAhB,EAAgB;AAAA,MAAZX,QAAY,SAAZA,QAAY;;AAAA,mBACzDL,SAAS,CAAC,EAAD,CADgD;AAAA;AAAA,MACxEiB,GADwE;AAAA,MACnEC,MADmE;;AAG/E,MAAMC,CAAC,GAAG;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAV;AAEA,MAAIL,SAAS,KAAK,MAAlB,EAA0BI,CAAC,CAACE,OAAF,GAAY,OAAZ,CAA1B,KACKF,CAAC,CAACE,OAAF,GAAY,MAAZ;AAEL,SACE,MAAC,MAAD,CAAQ,OAAR;AACE,IAAA,OAAO,EAAE;AAAEF,MAAAA,CAAC,EAAEA,CAAC,CAACE;AAAP,KADX;AAEE,IAAA,OAAO,EAAE;AACPF,MAAAA,CAAC,EAAED,MAAM,IAAIC,CAAC,CAACC,MADR;AAEPE,MAAAA,aAAa,EAAC;AACZH,QAAAA,CAAC,EAAED,MAAM,IAAI;AADD;AAFP,KAFX;AAQE,IAAA,UAAU,EAAE;AAAEK,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,OAAO,EAAE,GAA3B;AAAgCC,MAAAA,QAAQ,EAAE;AAA1C,KARd;AASE,IAAA,GAAG,EAAER,GATP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWGZ,QAXH,CADF;AAeD;;GAvBQS,wB;UACed,S;;;MADfc,wB;;AAyBT,IAAMY,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,KAAD;AAAA,SAC1B,MAAC,SAAD;AAAW,IAAA,SAAS,EAAC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,eAAD,eAAqBA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CAD0B;AAAA,CAA5B;;MAAMD,mB;AAMN,eAAeA,mBAAf","sourcesContent":["import React from \"react\";\nimport tw from \"twin.macro\";\n\n/* framer-motion and useInView here are used to animate the sections in when we reach them in the viewport\n */\nimport { motion } from \"framer-motion\";\nimport useInView from '../hooks/useInView';\n\nconst StyledDiv = tw.div`min-h-screen text-secondary-500 p-8 overflow-hidden`;\nfunction AnimationReveal({ disabled, children }) {\n  if (disabled) {\n    return <>{children}</>;\n  }\n\n  if (!Array.isArray(children)) children = [children];\n\n  const directions = [\"left\", \"right\"];\n  const childrenWithAnimation = children.map((child, i) => {\n    return (\n      <AnimatedSlideInComponent key={i} direction={directions[i % directions.length]}>\n        {child}\n      </AnimatedSlideInComponent>\n    );\n  });\n  return <>{childrenWithAnimation}</>;\n}\n\nfunction AnimatedSlideInComponent({ direction = \"left\", offset = 30, children }) {\n  const [ref, inView] = useInView(30);\n\n  const x = { target: \"0%\" };\n\n  if (direction === \"left\") x.initial = \"-150%\";\n  else x.initial = \"150%\";\n\n  return (\n    <motion.section\n      initial={{ x: x.initial }}\n      animate={{ \n        x: inView && x.target,\n        transitionEnd:{\n          x: inView && 0\n        },\n      }}\n      transition={{ type: \"spring\", damping: 100, duration: 1 }}\n      ref={ref}\n    >\n      {children}\n    </motion.section>\n  );\n}\n\nconst AnimationRevealPage = (props) => (\n  <StyledDiv className=\"App\">\n    <AnimationReveal {...props} />\n  </StyledDiv>\n);\n\nexport default AnimationRevealPage;"]},"metadata":{},"sourceType":"module"}